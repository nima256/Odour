<!DOCTYPE html>
<html lang="fa" dir="rtl">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title> لوازم آرایشی با کیفیت</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2`family=Vazirmatn:wght@300;400;500;600;700;display=swap"
    rel="stylesheet" />
  <style>
    body {
      font-family: "Vazirmatn", sans-serif;
      scroll-behavior: smooth;
      text-align: right;
    }

    .logo-container {
      --logo-size: 2.5rem;
    }

    .logo {
      width: var(--logo-size);
      height: var(--logo-size);
    }

    .nav-link {
      transition: all 0.3s ease;
      position: relative;
    }

    .nav-link::after {
      content: "";
      position: absolute;
      width: 0;
      height: 2px;
      bottom: -4px;
      right: 50%;
      background: linear-gradient(90deg, #3b82f6, #1d4ed8);
      transition: all 0.3s ease;
    }

    .nav-link:hover::after {
      width: 100%;
      right: 0;
    }

    .icon-btn {
      transition: all 0.3s ease;
    }

    .icon-btn:hover {
      transform: translateY(-2px);
    }

    .mobile-menu {
      transition: all 0.3s ease;
      transform: translateX(100%);
      opacity: 0;
    }

    .mobile-menu.active {
      transform: translateX(0);
      opacity: 1;
    }

    .hero-slider {
      height: 80vh;
      min-height: 500px;
    }

    .slide {
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 1s ease-in-out;
      background-size: cover;
      background-position: center;
    }

    .slide.active {
      opacity: 1;
    }

    .discount-card:hover,
    .category-item:hover,
    .product-card:hover,
    .blog-card:hover {
      transform: translateY(-5px);
    }

    .cart-count {
      top: -8px;
      left: -8px;
    }

    .newsletter-input:focus {
      border-color: #f472b6;
      box-shadow: 0 0 0 2px rgba(244, 114, 182, 0.2);
    }

    .discount-slider::-webkit-scrollbar {
      height: 4px;
    }

    .discount-slider::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }

    .discount-slider::-webkit-scrollbar-thumb {
      background: #f472b6;
      border-radius: 10px;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .fade-in {
      animation: fadeIn 0.8s ease forwards;
    }

    .delay-100 {
      animation-delay: 0.1s;
    }

    .delay-200 {
      animation-delay: 0.2s;
    }

    .delay-300 {
      animation-delay: 0.3s;
    }

    .delay-400 {
      animation-delay: 0.4s;
    }

    .delay-500 {
      animation-delay: 0.5s;
    }

    /* استایل‌های پاپ‌آپ احراز هویت */
    #auth-popup {
      transition: opacity 0.3s ease;
      z-index: 1000;
    }

    #auth-popup:not(.hidden) {
      animation: fadeIn 0.3s ease;
    }

    .tab-content,
    .form-step {
      display: none;
    }

    .tab-content.active,
    .form-step.active {
      display: block;
    }

    input:focus {
      outline: none;
    }

    /* استایل کدهای تایید */
    .otp-input {
      width: 3rem;
      height: 3.5rem;
      font-size: 1.5rem;
      text-align: center;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      direction: ltr;
      /* این خط رو اضافه کنید */
    }

    /* انیمیشن پاپ‌آپ */
    @keyframes modalFadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .modal-content {
      animation: modalFadeIn 0.3s ease-out;
    }

    /* استایل پایه برای آیکون‌ها */
    .icon {
      width: 24px;
      height: 24px;
      stroke: currentColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      fill: none;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .cart-icon {
      color: #333;
    }

    .cart-icon:hover {
      color: #007bff;
    }

    .success-icon {
      color: #28a745;
    }

    .hidden {
      display: none;
    }

    .icon-container {
      width: 24px;
      height: 24px;
    }

.slider-container {
            overflow-x: auto;
            overflow-y: hidden;
            position: relative;
            border: 2px solid #e5e7eb;
            border-radius: 16px;
            background: white;
            padding: 20px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        .slider-track {
            display: flex;
            gap: 20px;
        }
        
        .slider-container::-webkit-scrollbar {
            height: 8px;
        }
        
        .slider-container::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 4px;
        }
        
        .slider-container::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
        }
        
        .slider-container::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
        
        .product-card {
            min-width: 280px;
            flex-shrink: 0;
        }
        
        @media (max-width: 768px) {
            .product-card {
                min-width: 250px;
            }
            
            .slider-track {
                gap: 15px;
            }
        }
        
        .special-tag {
            background: linear-gradient(135deg, #ff6b6b, #ff8e8e);
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        .price-old {
            position: relative;
        }
        
        .price-old::after {
            content: '';
            position: absolute;
            top: 50%;
            right: 0;
            width: 100%;
            height: 2px;
            background: #ef4444;
            transform: rotate(-5deg);
        }
        
        .view-btn {
            transition: all 0.3s ease;
        }
        
        .view-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .load-more-btn {
            transition: all 0.3s ease;
        }
        
        .load-more-btn:hover {
            background: #f8fafc;
            color: #7c3aed;
            transform: scale(1.02);
        }
  </style>
  </head>

<body class="bg-gray-50">
  <!-- Navigation Bar -->
  <nav class="fixed top-0 right-0 left-0 bg-white shadow-md z-50 px-4 md:px-6 py-3">
    <div class="max-w-7xl mx-auto flex items-center justify-between">
      <!-- Logo -->
      <a href="#" class="flex items-center order-2 md:order-1 h-12 md:h-14">
        <div class="h-full overflow-hidden flex items-center">
          <img src="logo.png" alt="لوگوی اودور" class="h-full w-auto object-contain" />
        </div>
      </a>

      <!-- Desktop Menu -->
      <div class="hidden md:flex items-center space-x-8 space-x-reverse order-1 md:order-2">
        <a href="/" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">خانه</a>
        <a href="/shop" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">فروشگاه</a>
        <a href="#" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">دسته‌بندی‌ها</a>
        <a href="/weblog" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">وبلاگ</a>
        <a href="#" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">درباره ما</a>
        <a href="#" class="nav-link text-gray-800 hover:text-pink-500 transition-colors">تماس با ما</a>
      </div>

      <!-- Icons -->
      <div class="flex items-center space-x-4 space-x-reverse order-1 md:order-3">
        <div class="relative">
          <button 
            class="relative text-gray-700 hover:text-pink-500 transition-colors">
            <a href="/cart">
            <i class="fas fa-shopping-bag text-xl"></i>
            </a>
            <% if(user) { %>
              <span id="cartCount"
                class="absolute cart-count bg-pink-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                <%= toPersianDigits(cartCount) %>
              </span>
              <% } %>
          </button>
        </div>
        <% if (!user) {%>
          <button id="user-auth-button" class="text-gray-700 hover:text-pink-500 transition-colors">
            <i class="fas fa-user text-xl"></i>
          </button>
          <% } else { %>
            <a href="/userProfile">
              <button class="text-gray-700 hover:text-pink-500 transition-colors">
                <i class="fas fa-user text-xl"></i>
              </button>
            </a>
            <% } %>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden hidden bg-white absolute right-0 left-0 top-full shadow-md">
      <div class="flex flex-col px-4 py-2">
        <a href="/" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">خانه</a>
        <a href="/shop" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">فروشگاه</a>
        <a href="#" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">دسته‌بندی‌ها</a>
        <a href="/weblog" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">وبلاگ</a>
        <a href="#" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">درباره ما</a>
        <a href="#" class="py-2 text-gray-800 hover:text-pink-500 transition-colors">تماس با ما</a>
      </div>
    </div>
  </nav>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const mobileMenuButton = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");

      mobileMenuButton.addEventListener("click", function () {
        mobileMenu.classList.toggle("hidden");
      });

      // بستن منو هنگام کلیک خارج از آن
      document.addEventListener("click", function (event) {
        if (
          !mobileMenu.contains(event.target) &&
          event.target !== mobileMenuButton
        ) {
          mobileMenu.classList.add("hidden");
        }
      });
    });
  </script>

  <!-- Hero Slider -->
  <div class="hero-slider relative overflow-hidden mt-16">
    <div class="slide active" style="
          background-image: linear-gradient(
              rgba(0, 0, 0, 0.3),
              rgba(0, 0, 0, 0.3)
            ),
            url('data:image/svg+xml;utf8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%221200%22 height=%22600%22 viewBox=%220 0 1200 600%22%3E%3Crect width=%221200%22 height=%22600%22 fill=%22%23c4b5fd%22/%3E%3Cpath d=%22M0,400 Q300,300 600,450 T1200,400 L1200,600 L0,600 Z%22 fill=%22%23ddd6fe%22/%3E%3C/svg%3E');
        ">
      <div class="container mx-auto px-6 h-full flex items-center">
        <div class="max-w-lg">
          <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
            زیبایی طبیعی خود را کشف کنید
          </h1>
          <p class="text-white text-lg mb-8">
            لوازم آرایشی با کیفیت برای بانوی امروزی. زیبایی طبیعی خود را با
            مجموعه انحصاری ما تقویت کنید.
          </p>
          <button class="bg-pink-500 hover:bg-pink-600 text-white px-8 py-3 rounded-full font-medium transition-colors">
            خرید کنید
          </button>
        </div>
      </div>
    </div>
    <div class="slide" style="
          background-image: linear-gradient(
              rgba(0, 0, 0, 0.3),
              rgba(0, 0, 0, 0.3)
            ),
            url('data:image/svg+xml;utf8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%221200%22 height=%22600%22 viewBox=%220 0 1200 600%22%3E%3Crect width=%221200%22 height=%22600%22 fill=%22%23c4b5fd%22/%3E%3Cpath d=%22M0,400 Q300,300 600,450 T1200,400 L1200,600 L0,600 Z%22 fill=%22%23ddd6fe%22/%3E%3C/svg%3E');
        ">
      <div class="container mx-auto px-6 h-full flex items-center">
        <div class="max-w-lg">
          <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
            مجموعه جدید تابستانی
          </h1>
          <p class="text-white text-lg mb-8">
            رنگ‌های شاد و فرمول‌های سبک مناسب برای فصل تابستان.
          </p>
          <button
            class="bg-purple-500 hover:bg-purple-600 text-white px-8 py-3 rounded-full font-medium transition-colors">
            مشاهده مجموعه
          </button>
        </div>
      </div>
    </div>
    <div class="slide" style="
          background-image: linear-gradient(
              rgba(0, 0, 0, 0.3),
              rgba(0, 0, 0, 0.3)
            ),
            url('data:image/svg+xml;utf8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%221200%22 height=%22600%22 viewBox=%220 0 1200 600%22%3E%3Crect width=%221200%22 height=%22600%22 fill=%22%23c4b5fd%22/%3E%3Cpath d=%22M0,400 Q300,300 600,450 T1200,400 L1200,600 L0,600 Z%22 fill=%22%23ddd6fe%22/%3E%3C/svg%3E');
        ">
      <div class="container mx-auto px-6 h-full flex items-center">
        <div class="max-w-lg">
          <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
            زیبایی سازگار با محیط زیست
          </h1>
          <p class="text-white text-lg mb-8">
            محصولات پایدار و بدون آزمایش روی حیوانات که از پوست شما و سیاره
            مراقبت می‌کنند.
          </p>
          <button class="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-full font-medium transition-colors">
            بیشتر بدانید
          </button>
        </div>
      </div>
    </div>

    <!-- Slider Controls -->
    <div class="absolute bottom-5 right-0 left-0 flex justify-center space-x-2 space-x-reverse">
      <button class="w-3 h-3 rounded-full bg-white opacity-50 slider-dot active" data-index="0"></button>
      <button class="w-3 h-3 rounded-full bg-white opacity-50 slider-dot" data-index="1"></button>
      <button class="w-3 h-3 rounded-full bg-white opacity-50 slider-dot" data-index="2"></button>
    </div>
  </div>

  <!-- پاپ‌آپ احراز هویت -->
  <div id="auth-popup" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-xl shadow-lg w-full max-w-md mx-4 modal-content">
      <!-- Tab Navigation -->
      <div class="flex border-b">
        <button id="login-tab"
          class="tab-btn flex-1 py-4 text-center font-medium text-pink-500 border-b-2 border-pink-500">
          ورود
        </button>
        <button id="register-tab" class="tab-btn flex-1 py-4 text-center font-medium text-gray-500">
          ثبت نام
        </button>
        <button id="forgot-tab" class="tab-btn flex-1 py-4 text-center font-medium text-gray-500">
          بازیابی رمز
        </button>
      </div>

      <!-- Login Form -->
      <div id="login-content" class="tab-content active p-6">
        <h2 class="text-xl font-bold text-gray-800 mb-5 text-center">
          ورود به حساب کاربری
        </h2>
        <form action="/api/authentication/signIn" method="post" id="login-form" class="space-y-5">
          <div>
            <label class="block text-gray-700 mb-2" for="login-phone">شماره موبایل</label>
            <input type="tel" name="mobile" id="login-phone" class="w-full px-4 py-3 rounded-lg border"
              placeholder="09xxxxxxxxx" required />
          </div>
          <div>
            <label class="block text-gray-700 mb-2" for="login-password">رمز عبور</label>
            <input type="password" name="password" id="login-password" class="w-full px-4 py-3 rounded-lg border"
              placeholder="رمز عبور خود را وارد کنید" required />
          </div>
          <button type="submit"
            class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors">
            ورود
          </button>
        </form>
      </div>

      <!-- Registration Form -->
      <div id="register-content" class="tab-content p-6">
        <!-- Step 1: Registration Form -->
        <div id="register-step-1" class="form-step active">
          <h2 class="text-xl font-bold text-gray-800 mb-5 text-center">
            ایجاد حساب کاربری
          </h2>
          <form action="/api/authentication/signUp" method="post" id="register-form" class="space-y-4">
            <div>
              <label class="block text-gray-700 mb-2" for="register-name">نام و نام خانوادگی</label>
              <input type="text" name="fullName" id="register-name" class="w-full px-4 py-3 rounded-lg border"
                placeholder="نام کامل خود را وارد کنید" required />
            </div>
            <div>
              <label class="block text-gray-700 mb-2" for="register-phone">شماره موبایل</label>
              <input type="tel" name="mobile" id="register-phone" class="w-full px-4 py-3 rounded-lg border"
                placeholder="09xxxxxxxxx" required />
            </div>
            <div>
              <label class="block text-gray-700 mb-2" for="register-email">ایمیل</label>
              <input type="email" name="email" id="register-email" class="w-full px-4 py-3 rounded-lg border"
                placeholder="email@example.com" required />
            </div>
            <div>
              <label class="block text-gray-700 mb-2" for="register-password">رمز عبور</label>
              <input type="password" name="password" id="register-password" class="w-full px-4 py-3 rounded-lg border"
                placeholder="حداقل 8 کاراکتر" required />
            </div>
            <div>
              <label class="block text-gray-700 mb-2" for="register-confirm-password">تکرار رمز عبور</label>
              <input type="password" name="confirmPassword" id="register-confirm-password"
                class="w-full px-4 py-3 rounded-lg border" placeholder="تکرار رمز عبور" required />
            </div>
            <button type="submit"
              class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors mt-2">
              ثبت نام
            </button>
          </form>
        </div>

        <!-- Step 2: Verification Code -->
        <div id="register-step-2" class="form-step">
          <h2 class="text-xl font-bold text-gray-800 mb-2 text-center">
            تایید شماره موبایل
          </h2>
          <p class="text-gray-600 text-center mb-5">
            کد تایید به شماره
            <span id="register-phone-display" class="font-bold"></span> ارسال
            شد
          </p>
          <form id="register-verification-form" class="space-y-5">
            <div class="text-center">
              <label class="block text-gray-700 mb-4 text-center">کد تایید را وارد کنید</label>
              <!-- در بخش ثبت نام -->
              <div class="flex justify-center gap-2 mb-3">
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
              </div>
              <div id="register-resend-timer" class="text-sm text-gray-500 mb-3">
                ارسال مجدد کد تا <span>۰۲:۰۰</span>
              </div>
            </div>
            <button type="submit"
              class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors">
              تایید و ورود
            </button>
            <button type="button" id="register-back-btn"
              class="w-full bg-white text-pink-500 py-3 rounded-lg font-medium border border-pink-500 hover:bg-pink-50 transition-colors">
              بازگشت
            </button>
          </form>
        </div>
      </div>

      <!-- Forgot Password Form -->
      <div id="forgot-content" class="tab-content p-6">
        <!-- Step 1: Phone Number -->
        <div id="forgot-step-1" class="form-step active">
          <h2 class="text-xl font-bold text-gray-800 mb-5 text-center">
            بازیابی رمز عبور
          </h2>
          <form id="forgot-form" class="space-y-5">
            <div>
              <label class="block text-gray-700 mb-2" for="forgot-phone">شماره موبایل</label>
              <input type="tel" id="forgot-phone" class="w-full px-4 py-3 rounded-lg border" placeholder="09xxxxxxxxx"
                required />
            </div>
            <button type="submit"
              class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors">
              ارسال کد تایید
            </button>
          </form>
        </div>

        <!-- Step 2: Verification Code -->
        <div id="forgot-step-2" class="form-step">
          <h2 class="text-xl font-bold text-gray-800 mb-2 text-center">
            تایید کد
          </h2>
          <p class="text-gray-600 text-center mb-5">
            کد تایید به شماره
            <span id="forgot-phone-display" class="font-bold"></span> ارسال شد
          </p>
          <form id="forgot-verification-form" class="space-y-5">
            <div class="text-center">
              <label class="block text-gray-700 mb-4 text-center">کد تایید را وارد کنید</label>
              <!-- در بخش ثبت نام -->
              <div class="flex justify-center gap-2 mb-3">
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
                <input type="text" maxlength="1" class="otp-input" dir="ltr" required />
              </div>
              <div id="forgot-resend-timer" class="text-sm text-gray-500 mb-3">
                ارسال مجدد کد تا <span>۰۲:۰۰</span>
              </div>
            </div>
            <button type="submit"
              class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors">
              تایید
            </button>
            <button type="button" id="forgot-back-btn"
              class="w-full bg-white text-pink-500 py-3 rounded-lg font-medium border border-pink-500 hover:bg-pink-50 transition-colors">
              بازگشت
            </button>
          </form>
        </div>

        <!-- Step 3: New Password -->
        <div id="forgot-step-3" class="form-step">
          <h2 class="text-xl font-bold text-gray-800 mb-5 text-center">
            تعیین رمز عبور جدید
          </h2>
          <form id="new-password-form" class="space-y-5">
            <div>
              <label class="block text-gray-700 mb-2" for="new-password">رمز عبور جدید</label>
              <input type="password" id="new-password" class="w-full px-4 py-3 rounded-lg border"
                placeholder="حداقل 8 کاراکتر" required />
            </div>
            <div>
              <label class="block text-gray-700 mb-2" for="confirm-new-password">تکرار رمز عبور جدید</label>
              <input type="password" id="confirm-new-password" class="w-full px-4 py-3 rounded-lg border"
                placeholder="تکرار رمز عبور جدید" required />
              <input type="hidden" id="reset-token" name="reset-token">
            </div>
            <button type="submit"
              class="w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-lg font-medium transition-colors">
              ذخیره و ورود
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <!-- Special Discounts Section -->
  <section class="py-12 px-4 bg-white">
      <div class="relative">
      <section class="py-12 px-4 bg-white">
       <div class="max-w-7xl mx-auto">
          <h2 class="text-3xl font-bold text-gray-800 mb-2 fade-in">
            پیشنهادات ویژه
          </h2>
          <p class="text-gray-600 mb-8 fade-in delay-100">
            تخفیف‌های محدود روی محصولات با کیفیت
          </p>
      <div class="max-w-7xl mx-auto px-4">
        <!-- اسلایدر محصولات -->
        <div class="slider-container">
            <div class="slider-track">
              <% for (let product of isFeaturedProducts) {%>
                <div class="product-card bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
                    <a href="/productDetails/<%= product.slug %>">
                    <div class="relative">
                        <div class="special-tag absolute top-3 right-3 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-medium z-10">
                            پیشنهاد ویژه
                        </div>
                        <div class="w-full h-48 bg-gradient-to-br from-purple-100 to-pink-100 flex items-center justify-center">

                              <img src="<%= product.images[0].url %>" alt="" style="height: 100%; width: 100%">
                        </div>
                    </div>
                    </a>
                    <div class="p-5">
                        <h3 class="font-semibold text-lg text-gray-800 mb-2"><%= product.name %></h3>
                        <p class="text-gray-600 text-sm mb-4"><%= product.lilDescription %></p>
                        <div class="flex items-center justify-between mb-4">
                            <div class="flex items-center gap-2">
                                <% if (product.offerPrice) {%>
                                <span class="text-lg font-bold text-green-600"><%= toPersianDigits(product.offerPrice) %></span>
                                <span class="price-old text-sm text-gray-400"><%= toPersianDigits(product.price) %></span>
                                <% } else {%>
                                <span class="text-lg font-bold text-green-600"><%= toPersianDigits(product.price) %></span>
                                <% } %>
                              </div>
                              <% if(product.discount) {%>
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium"><%= toPersianDigitsForSizes(product.discount) %>٪ تخفیف</span>
                              <% } %>
                        </div>
                        <button onclick="location.href='/productDetails/<%= product.slug %>';" class="view-btn w-full bg-gradient-to-r from-pink-500 to-purple-600 text-white py-3 rounded-xl font-medium flex items-center justify-center gap-2">
                            مشاهده
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0h8"/>
                            </svg>
                        </button>
                    </div>
                </div>
              <% } %>

                <!-- دکمه ادامه محصولات -->
                <div class="product-card flex items-center justify-center">
                    <button onclick="loadMoreProducts()" class="load-more-btn text-center text-gray-600 p-8 rounded-xl border-2 border-dashed border-gray-300 cursor-pointer w-full h-full flex flex-col items-center justify-center">
                        <div class="text-lg font-medium mb-3">ادامه محصولات</div>
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                        </svg>
                        <div class="text-sm text-gray-500 mt-2">کلیک کنید</div>
                    </button>
                </div>
            </div>
        </div>
    </div>

      <script>
          function loadMoreProducts() {
              alert('در حال بارگذاری محصولات بیشتر...\n\nمحصولات جدید به زودی اضافه خواهند شد!');
              console.log('Loading more products requested');
          }

          // اضافه کردن انیمیشن به دکمه‌های مشاهده
          document.querySelectorAll('.view-btn').forEach(btn => {
              btn.addEventListener('click', function() {
                  this.innerHTML = '<span>در حال بارگذاری...</span>';
                  setTimeout(() => {
                      this.innerHTML = `مشاهده <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0h8"/></svg>`;
                  }, 1000);
              });
          });
      </script>
          
      </div>
      </section>
        <!-- Scroll Arrows -->
        <button
          class="absolute right-0 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none hidden md:block"
          id="scroll-right" style="display: none;">
        </button>
        <button
          class="absolute left-0 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none hidden md:block"
          id="scroll-left" style="display: none;">
        </button>
      </div>
    </div>
  </section>

  <!-- Product Categories -->
  <section class="py-12 px-4 bg-gray-50">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-3xl font-bold text-gray-800 mb-2 fade-in">
        خرید بر اساس دسته‌ بندی
      </h2>
      <p class="text-gray-600 mb-8 fade-in delay-100">
        مجموعه گسترده محصولات زیبایی ما را کاوش کنید
      </p>

      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 fade-in delay-200">
        <% for(let category of categories) {%>
          <a href="/shop" onclick="setSelectedCategory('<%= category.name %>')">
            <div
              class="category-item bg-white rounded-lg p-6 text-center shadow-md hover:shadow-lg transition-transform duration-300">
              <div class="w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center"
                style="background-color: <%= category.color %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor" style="color: <%= category.textColor %>">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="<%= category.imgSvgForHome  %>" />
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-gray-800">
                <%= category.name %>
              </h3>
              <p class="text-gray-500 text-sm mt-1">
                <%= toPersianDigits(category.productCount) %> محصول
              </p>
            </div>
          </a>
          <% } %>
      </div>
    </div>
  </section>

  <!-- Best Selling Products -->
  <section class="py-12 px-4 bg-white">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-3xl font-bold text-gray-800 mb-2 fade-in">
        پرفروش‌ ترین‌ ها
      </h2>
      <p class="text-gray-600 mb-8 fade-in delay-100">
        محبوب‌ترین محصولات ما که مشتریان دوست دارند
      </p>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 fade-in delay-200">
        <!-- Product 1 -->
        <% for (let product of products) {%>
          <div
            class="product-card bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-transform duration-300">
            <a href="/productDetails/<%= product.slug %>">
              <div class="relative">
                <div class="h-64 bg-pink-100 flex items-center justify-center">
                  <img src="<%= product?.images[0]?.url %>" alt="" style="height: 100%; width: 100%" />
                </div>
              </div>
            </a>
            <div class="p-4">
              <div class="flex items-center mb-1">
                <% const fullStars=Math.floor(product.rating); const hasHalfStar=product.rating % 1>= 0.5; const
                  emptyStars = 5 -
                  fullStars - (hasHalfStar ? 1 : 0); %>

                  <div class="flex text-yellow-400">
                    <% for (let i=0; i < fullStars; i++) { %>
                      <i class="fas fa-star"></i>
                      <% } %>
                        <% if (hasHalfStar) { %>
                          <i class="fas fa-star-half-alt"></i>
                          <% } %>
                            <% for (let i=0; i < emptyStars; i++) { %>
                              <i class="far fa-star"></i>
                              <% } %>
                  </div>
                  <span class="text-gray-500 text-sm mr-1">(<%= toPersianDigits(product.reviewsNum) %>)</span>
              </div>
              <h3 class="text-lg font-semibold text-gray-800 mb-1">
                <%= product.name %>
              </h3>
              <p class="text-gray-600 text-sm mb-3">
                <%= product.lilDescription %>
              </p>
              <div class="flex items-center justify-between">
                <% if(product.offerPrice) {%>
                  <div>
                    <span class="text-pink-500 font-bold">
                      <%= toPersianDigits(product.offerPrice) %> تومان
                    </span>
                    <span class="text-gray-400 line-through text-sm mr-2">
                      <%= toPersianDigits(product.price) %> تومان
                    </span>
                  </div>
                  <% } else {%>
                    <div>
                      <span class="text-pink-500 font-bold">
                        <%= toPersianDigits(product.price) %> تومان
                      </span>
                    </div>
                    <% } %>
                      <div class="icon-container">
                        <!-- آیکون سبد خرید -->

                        <svg id="cartIcon" onclick="location.href='/productDetails/<%= product.slug %>';"
                          class="cart-icon icon cursor-pointer" viewBox="0 0 24 24">
                          <path d="M1 1h4l2.68 13.39a2 2 0 002 1.61h9.72a2 2 0 002-1.61L23 6H6"></path>
                          <circle cx="9" cy="20" r="1"></circle>
                          <circle cx="20" cy="20" r="1"></circle>
                        </svg>

                        <!-- آیکون تیک (مخفی شده) -->
                        <svg id="successIcon" class="success-icon icon hidden" viewBox="0 0 24 24">
                          <path d="M5 13l4 4L19 7"></path>
                        </svg>
                      </div>
              </div>
            </div>
          </div>
          <% } %>

          <script>
              function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = `fixed z-50 px-4 py-3 rounded-lg shadow-lg text-white text-sm sm:text-base ${
                    type === 'success' ? 'bg-green-500' : 
                    type === 'error' ? 'bg-red-500' : 
                    'bg-blue-500'
                }`;
                
                // Mobile: centered at top, Desktop: top-right
                notification.className += ' top-4 left-1/2 -translate-x-1/2 sm:left-auto sm:translate-x-0 sm:top-6 sm:right-6';
                
                // Width control
                notification.className += ' w-[calc(100%-2rem)] max-w-xs sm:max-w-sm';
                
                notification.textContent = message;
                
                document.body.appendChild(notification);
                
                // Animation in
                notification.classList.add('transform', 'transition-all', 'duration-300');
                notification.classList.add('translate-y-2', 'opacity-0');
                
                setTimeout(() => {
                    notification.classList.remove('translate-y-2', 'opacity-0');
                }, 10);
                
                setTimeout(() => {
                    notification.classList.add('opacity-0', 'translate-y-2');
                    setTimeout(() => notification.remove(), 300);
                }, 2000);
              }
          </script>

          <% if(success.length) {%>
          <script>
            showNotification('<%= TEXT %>', '<%= ICON %>')
          </script>
          <% } %>
          <% if(error.length) {%>
            <script>
                showNotification('<%= TEXT %>', '<%= ICON %>')
            </script>
          <% } %>

            <script>
              function showNotificationInPopUp(message, type = 'info') {
                  const authPopup = document.getElementById('auth-popup');
                  const notification = document.createElement('div'); // Create element on document, not authPopup
                  notification.className = `fixed z-50 px-4 py-3 rounded-lg shadow-lg text-white text-sm sm:text-base ${
                      type === 'success' ? 'bg-green-500' : 
                      type === 'error' ? 'bg-red-500' : 
                      'bg-blue-500'
                  }`;
                  
                  notification.textContent = message;
                  
                  // Animation in
                  notification.classList.add('transform', 'transition-all', 'duration-300');
                  notification.classList.add('-translate-y-[100px]', 'opacity-0');
                  
                  // Append the notification to the authPopup
                  authPopup.appendChild(notification);
                  
                  setTimeout(() => {
                      notification.classList.remove('translate-y-2', 'opacity-0');
                  }, 10);
                  
                  setTimeout(() => {
                      notification.classList.add('opacity-0', 'translate-y-2');
                      setTimeout(() => notification.remove(), 300);
                  }, 2000);
              }

              function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = `fixed z-50 px-4 py-3 rounded-lg shadow-lg text-white text-sm sm:text-base ${
                    type === 'success' ? 'bg-green-500' : 
                    type === 'error' ? 'bg-red-500' : 
                    'bg-blue-500'
                }`;
                
                // Mobile: centered at top, Desktop: top-right
                notification.className += ' top-4 left-1/2 -translate-x-1/2 sm:left-auto sm:translate-x-0 sm:top-6 sm:right-6';
                
                // Width control
                notification.className += ' w-[calc(100%-2rem)] max-w-xs sm:max-w-sm';
                
                notification.textContent = message;
                
                document.body.appendChild(notification);
                
                // Animation in
                notification.classList.add('transform', 'transition-all', 'duration-300');
                notification.classList.add('translate-y-2', 'opacity-0');
                
                setTimeout(() => {
                    notification.classList.remove('translate-y-2', 'opacity-0');
                }, 10);
                
                setTimeout(() => {
                    notification.classList.add('opacity-0', 'translate-y-2');
                    setTimeout(() => notification.remove(), 300);
                }, 2000);
            }
              
              function setSelectedCategory(categoryName) {
                localStorage.setItem("selectedCategory", categoryName);
              }

              // Hero Slider
              const slides = document.querySelectorAll(".slide");
              const dots = document.querySelectorAll(".slider-dot");
              let currentSlide = 0;

              function showSlide(index) {
                slides.forEach((slide) => slide.classList.remove("active"));
                dots.forEach((dot) => dot.classList.remove("active"));
                slides[index].classList.add("active");
                dots[index].classList.add("active");
                currentSlide = index;
              }

              dots.forEach((dot, index) => {
                dot.addEventListener("click", () => {
                  showSlide(index);
                });
              });

              function nextSlide() {
                currentSlide = (currentSlide + 1) % slides.length;
                showSlide(currentSlide);
              }

              // Auto slide every 5 seconds
              setInterval(nextSlide, 5000);

              // Discount Slider Scroll - Note: Reversed for RTL
              const scrollLeftBtn = document.getElementById("scroll-left");
              const scrollRightBtn = document.getElementById("scroll-right");
              const discountSlider = document.querySelector(".discount-slider");

              scrollLeftBtn.addEventListener("click", () => {
                discountSlider.scrollBy({ left: 300, behavior: "smooth" }); // Reversed for RTL
              });

              scrollRightBtn.addEventListener("click", () => {
                discountSlider.scrollBy({ left: -300, behavior: "smooth" }); // Reversed for RTL
              });

              // Fade-in animation on scroll
              const fadeElements = document.querySelectorAll(".fade-in");

              function checkFade() {
                fadeElements.forEach((element) => {
                  const elementTop = element.getBoundingClientRect().top;
                  const windowHeight = window.innerHeight;

                  if (elementTop < windowHeight - 100) {
                    element.classList.add("fade-visible");
                  }
                });
              }

              window.addEventListener("scroll", checkFade);
              window.addEventListener("load", checkFade);

              document.addEventListener("DOMContentLoaded", function () {
                // مدیریت اسلایدر هیرو
                const slides = document.querySelectorAll(".slide");
                const dots = document.querySelectorAll(".slider-dot");
                let currentSlide = 0;

                function showSlide(index) {
                  slides.forEach((slide) => slide.classList.remove("active"));
                  dots.forEach((dot) => dot.classList.remove("active"));

                  slides[index].classList.add("active");
                  dots[index].classList.add("active");
                  currentSlide = index;
                }

                dots.forEach((dot) => {
                  dot.addEventListener("click", function () {
                    showSlide(parseInt(this.dataset.index));
                  });
                });

                setInterval(() => {
                  currentSlide = (currentSlide + 1) % slides.length;
                  showSlide(currentSlide);
                }, 5000);

                // مدیریت پاپ‌آپ احراز هویت
                const authButton = document.getElementById("user-auth-button");
                const authPopup = document.getElementById("auth-popup");

                authButton.addEventListener("click", function (e) {
                  e.preventDefault();
                  authPopup.classList.remove("hidden");
                  switchTab("login");
                });

                authPopup.addEventListener("click", function (e) {
                  if (e.target === authPopup) {
                    authPopup.classList.add("hidden");
                  }
                });

                // Tab Switching
                const tabs = {
                  login: document.getElementById("login-tab"),
                  register: document.getElementById("register-tab"),
                  forgot: document.getElementById("forgot-tab"),
                };

                const contents = {
                  login: document.getElementById("login-content"),
                  register: document.getElementById("register-content"),
                  forgot: document.getElementById("forgot-content"),
                };

                function switchTab(activeTab) {
                  Object.values(tabs).forEach((tab) => {
                    tab.classList.remove("border-pink-500", "text-pink-500");
                    tab.classList.add("text-gray-500");
                  });

                  Object.values(contents).forEach((content) => {
                    content.classList.remove("active");
                  });

                  tabs[activeTab].classList.add(
                    "border-pink-500",
                    "text-pink-500"
                  );
                  tabs[activeTab].classList.remove("text-gray-500");
                  contents[activeTab].classList.add("active");
                }

                tabs.login.addEventListener("click", () => switchTab("login"));
                tabs.register.addEventListener("click", () =>
                  switchTab("register")
                );
                tabs.forgot.addEventListener("click", () => switchTab("forgot"));

                // Improved OTP input handling (LTR focus movement)
                function getOtpValue(containerSelector) {
                  const inputs = Array.from(
                    document.querySelectorAll(`${containerSelector} .otp-input`)
                  );
                  return inputs.map((input) => input.value).join("");
                }

                // Registration Process
                const registerForm = document.getElementById("register-form");
                const registerStep1 = document.getElementById("register-step-1");
                const registerStep2 = document.getElementById("register-step-2");
                const registerPhoneDisplay = document.getElementById(
                  "register-phone-display"
                );

                registerForm.addEventListener("submit", function (e) {
                  e.preventDefault();

                  const fullName = document.getElementById("register-name").value
                  const mobile = document.getElementById("register-phone").value.trim();
                  const email = document.getElementById("register-email").value.trim();
                  const password = document.getElementById("register-password").value;
                  const confirmPassword = document.getElementById("register-confirm-password").value;

                  
                  const iranMobileRegex = /^09\d{9}$/;
                  const emailRegex = /^\S+@\S+\.\S+$/;


                      if (fullName.length < 3) {
                      showNotificationInPopUp("نام کامل باید حداقل ۳ کاراکتر باشد", 'error');
                      return;
                    }

                    // ✅ Mobile number format
                    if (!iranMobileRegex.test(mobile)) {
                      showNotificationInPopUp("شماره موبایل وارد شده معتبر نیست (مثال: 09123456789)", 'error');
                      return;
                    }

                    // ✅ Email (if entered)
                    if (email && !emailRegex.test(email)) {
                      showNotificationInPopUp("ایمیل وارد شده معتبر نیست", 'error');
                      return;
                    }

                    // ✅ Password rules
                    if (password.length < 8) {
                      showNotificationInPopUp("رمز عبور باید حداقل ۸ کاراکتر باشد", 'error');
                      return;
                    }

                    if (password !== confirmPassword) {
                      showNotificationInPopUp("رمز عبور و تکرار آن یکسان نیستند", 'error');
                      return;
                    }


                  const formDataRegister = new FormData(registerForm);
                  const phone = document.getElementById("register-phone").value;
                  registerPhoneDisplay.textContent = phone;
                  registerStep1.classList.remove("active");
                  registerStep2.classList.add("active");
                  startCountdown("register-resend-timer", 120);
                  setupOtpInputs("#register-step-2");

                  document.getElementById("register-resend-timer").addEventListener("click", function(e) {
                    if (e.target.classList.contains("resend-link")) {
                      e.preventDefault();
                      handleResendOtp("register-resend-timer");
                    }
                  });

                  fetch("/api/mobile/sendOtp", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ mobile: phone }),
                  })
                    .then((res) => res.json())
                    .then((data) => {
                      if (data.success) {
                        // Only run this if otp was successful
                        // otp verification form
                        const registerVerificationForm = document.getElementById(
                          "register-verification-form"
                        );

                        registerVerificationForm.addEventListener(
                          "submit",
                          function (e) {
                            e.preventDefault();
                            const otpValue = getOtpValue("#register-step-2");
                            const reversedOtpValue = otpValue
                              .split("")
                              .reverse()
                              .join("");
                            fetch("/api/mobile/verifyOtp", {
                              method: "POST",
                              headers: {
                                "Content-Type": "application/json",
                              },
                              body: JSON.stringify({
                                mobile: phone,
                                otp: reversedOtpValue,
                              }),
                            })
                              .then((res) => res.json())
                              .then((data) => {
                                if (data.success) {
                                  fetch("/api/authentication/signUp", {
                                    method: "POST",
                                    body: formDataRegister,
                                  })
                                    .then((res) => res.json())
                                    .then((data) => {
                                      if (data.success) {
                                        // Only run this if registration was successful
                                        showNotification(data.message, 'success');
                                        setTimeout(() => {
                                          location.reload();
                                        }, 2000);
                                      } else {
                                        // Show error message
                                        showNotificationInPopUp(data.message, 'error');
                                      }
                                    })
                                    .catch((err) => {
                                      console.error("Error:", err);
                                      showNotificationInPopUp(data.message, 'error');
                                    });
                                  authPopup.classList.add("hidden");
                                } else {
                                  showNotificationInPopUp(data.message, 'error');
                                }
                              })
                              .catch((err) => {
                                console.error("Error:", err);
                                showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error');
                              });
                          }
                        );
                      } else {
                        // Show error message
                        showNotificationInPopUp(data.message, 'error')
                      }
                    })
                    .catch((err) => {
                      console.error("Error:", err);
                      showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error')
                    });
                });

                document
                  .getElementById("register-back-btn")
                  .addEventListener("click", function () {
                    registerStep2.classList.remove("active");
                    registerStep1.classList.add("active");
                  });

                // Forgot Password Process
                const forgotStep1 = document.getElementById("forgot-step-1");
                const forgotStep2 = document.getElementById("forgot-step-2");
                const forgotStep3 = document.getElementById("forgot-step-3");
                const forgotPhoneDisplay = document.getElementById(
                  "forgot-phone-display"
                );

              const forgotForm = document.getElementById("forgot-form");
              forgotForm.addEventListener("submit", function (e) {
                e.preventDefault();
                const phone = document.getElementById("forgot-phone").value;                
                fetch("/api/authentication/forgotPassword", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({ mobile: phone }),
                })
                .then(res => res.json())
                .then(data => {
                  if (data.success) {
                    forgotPhoneDisplay.textContent = phone;
                    forgotStep1.classList.remove("active");
                    forgotStep2.classList.add("active");
                    startCountdown("forgot-resend-timer", 120);
                    setupOtpInputs("#forgot-step-2");
                    
                    // For development only - show OTP in console
                    if (data.otp) {
                      console.log("OTP for testing:", data.otp);
                    }
                  } else {
                    showNotificationInPopUp(data.message, 'error');
                  }
                })
                .catch(err => {
                  console.error("Error:", err);
                  showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error');
                });
              }); 

                document
                  .getElementById("forgot-back-btn")
                  .addEventListener("click", function () {
                    forgotStep2.classList.remove("active");
                    forgotStep1.classList.add("active");
                  });
                function setupOtpInputs(containerSelector) {
                  const inputs = Array.from(
                    document.querySelectorAll(`${containerSelector} .otp-input`)
                  );

                  // فوکوس روی آخرین اینپوت (راست‌ترین)
                  inputs[inputs.length - 1].focus();

                  inputs.forEach((input, index) => {
                    // حرکت به چپ هنگام وارد کردن عدد
                    input.addEventListener("input", function () {
                      if (this.value.length === 1) {
                        if (index > 0) {
                          inputs[index - 1].focus(); // حرکت به اینپوت قبلی (چپ)
                        }
                      }
                    });

                    // حرکت به راست هنگام پاک کردن
                    input.addEventListener("keydown", function (e) {
                      if (e.key === "Backspace" && this.value.length === 0) {
                        if (index < inputs.length - 1) {
                          inputs[index + 1].focus(); // حرکت به اینپوت بعدی (راست)
                        }
                      }
                    });
                  });
                }

                // Initialize OTP inputs for both forms
                setupOtpInputs("#register-step-2");
                setupOtpInputs("#forgot-step-2");

                // Forgot password verification form
                const forgotVerificationForm = document.getElementById(
                  "forgot-verification-form"
                );
                forgotVerificationForm.addEventListener("submit", function (e) {
                  e.preventDefault();
                  const otpValue = getOtpValue("#forgot-step-2");
                  const reversedOtpValue = otpValue
                      .split("")
                      .reverse()
                      .join("");
                  
                  fetch("/api/authentication/verifyPasswordResetOtp", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                      mobile: forgotPhoneDisplay.textContent,
                      otp: reversedOtpValue
                    }),
                  })
                  .then(res => res.json())
                  .then(data => {
                    if (data.success) {
                      forgotStep2.classList.remove("active");
                      forgotStep3.classList.add("active");
                      
                      // Store the reset token in a hidden field or variable
                      if (data.resetToken) {
                        document.getElementById("reset-token").value = data.resetToken;
                      }
                    } else {
                      showNotificationInPopUp(data.message, 'error');
                    }
                  })
                  .catch(err => {
                    console.error("Error:", err);
                    showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error');
                  });
                });

                // Login form submission
                const loginForm = document.getElementById("login-form");

                loginForm.addEventListener("submit", function (e) {
                  const formDataLogin = new FormData(loginForm);
                  e.preventDefault();
                  fetch("/api/authentication/signIn", {
                    method: "POST",
                    body: formDataLogin,
                  })
                    .then((res) => res.json())
                    .then((data) => {
                      if (data.success) {
                      // Only run this if registration was successful
                      showNotification(data.message, 'success');
                      setTimeout(() => {
                        location.reload();
                      }, 2000);
                      authPopup.classList.add("hidden");
                      } else {
                        // Show error message
                        showNotificationInPopUp(data.message, 'error');
                      }
                    })
                    .catch((err) => {
                      console.error("Error:", err);
                      showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error');
                    });
                });

                // New password form submission
                const newPasswordForm = document.getElementById("new-password-form");
                newPasswordForm.addEventListener("submit", function (e) {
                  e.preventDefault();
                  const password = document.getElementById("new-password").value;
                  const confirmPassword = document.getElementById("confirm-new-password").value;
                  const resetToken = document.getElementById("reset-token").value;
                  
                  if (password !== confirmPassword) {
                    showNotificationInPopUp("رمز عبور و تکرار آن یکسان نیستند", 'error');
                    return;
                  }
                  
                  fetch(`/api/authentication/resetPassword/${resetToken}`, {
                    method: "PATCH",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ password }),
                  })
                  .then(res => res.json())
                  .then(data => {
                    if (data.success) {
                      showNotification("رمز عبور با موفقیت تغییر یافت! اکنون وارد شوید", 'success');
                      authPopup.classList.add("hidden");
                      
                      // Optional: Automatically log the user in
                      if (data.token) {
                        localStorage.setItem('token', data.token);
                        // Update UI to show user is logged in
                      }
                    } else {
                      showNotificationInPopUp(data.message, 'error');
                    }
                  })
                  .catch(err => {
                    console.error("Error:", err);
                    showNotificationInPopUp("مشکلی در ارتباط با سرور به وجود آمده است", 'error');
                  });
                });

                function startCountdown(elementId, seconds) {
                  const timerElement = document.getElementById(elementId);
                  const timerSpan = timerElement.querySelector("span");

                  let remaining = seconds;

                  const interval = setInterval(() => {
                    const minutes = Math.floor(remaining / 60);
                    const secs = remaining % 60;

                    timerSpan.textContent = `${minutes
                      .toString()
                      .padStart(2, "0")}:${secs.toString().padStart(2, "0")}`;

                    if (remaining <= 0) {
                      clearInterval(interval);
                      timerElement.innerHTML =
                        '<a href="#" class="text-pink-500 resend-link">ارسال مجدد کد</a>';
                      
                      // Add click event to resend link
                      const resendLink = timerElement.querySelector('.resend-link');
                      resendLink.addEventListener('click', function(e) {
                        e.preventDefault();
                        handleResendOtp(elementId);
                      });
                    }

                    remaining--;
                  }, 1000);
                }

                function handleResendOtp(elementId) {
                  // Determine which form we're in (register or forgot password)
                  const isRegister = elementId.includes('register');
                  const phone = isRegister 
                    ? document.getElementById('register-phone').value
                    : document.getElementById('forgot-phone').value;

                  if (!phone) {
                    showNotificationInPopUp('شماره موبایل یافت نشد', 'error');
                    return;
                  }

                  fetch("/api/mobile/sendOtp", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ mobile: phone }),
                  })
                  .then((res) => res.json())
                  .then((data) => {
                    if (data.success) {
                      showNotificationInPopUp('کد تأیید جدید ارسال شد', 'success');
                      startCountdown(elementId, 120); // Restart the countdown
                    } else {
                      showNotificationInPopUp(data.message || 'خطا در ارسال کد تأیید', 'error');
                      if (data.retryAfter) {
                        // If we need to wait before resending
                        setTimeout(() => {
                          document.getElementById(elementId).innerHTML =
                            '<a href="#" class="text-pink-500 resend-link">ارسال مجدد کد</a>';
                          const resendLink = document.querySelector(`#${elementId} .resend-link`);
                          resendLink.addEventListener('click', function(e) {
                            e.preventDefault();
                            handleResendOtp(elementId);
                          });
                        }, data.retryAfter * 1000);
                      }
                    }
                  })
                  .catch((err) => {
                    console.error("Error:", err);
                    showNotificationInPopUp('مشکلی در ارتباط با سرور به وجود آمده است', 'error');
                  });
                }                

                // Phone number input validation
                const phoneInputs =
                  document.querySelectorAll('input[type="tel"]');
                phoneInputs.forEach((input) => {
                  input.addEventListener("input", function (e) {
                    this.value = this.value.replace(/\D/g, "");
                  });

                  input.addEventListener("blur", function () {
                    if (!this.value.startsWith("0") && this.value.length > 0) {
                      this.value = "0" + this.value;
                    }
                  });
                });
              });             
            </script>
      </div>
    </div>
  </section>
 <footer class="bg-gray-900 text-white py-12">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <div>
          <div class="flex items-center space-x-reverse space-x-3 mb-4">
            <div class="w-10 h-10  rounded-lg flex items-center justify-center">
              <img src="logo.png" alt="icon" class="w-15 h-15 object-contain">
            </div>
            <h3 class="text-xl font-bold">ODOUR</h3>
          </div>
          <p class="text-gray-400 text-sm leading-relaxed">
          فروشگاهی مدرن برای خرید محصولات آرایشی
          </p>
          <p class="text-gray-400 text-sm leading-relaxed mt-2">شماره تلفن: ۰۹۰۵۴۲۴۳۴۶۴</p>
        </div>
        <div>
          <h4 class="font-bold mb-4">دسته‌بندی‌ها</h4>
          <ul class="space-y-2 text-sm text-gray-400">
            <li>
              <a href="odour.ir" class="hover:text-white transition-colors">خانه</a>
            </li>
            <li>
              <a href="odour.ir/shop" class="hover:text-white transition-colors">فروشگاه</a>
            </li>
            <li>
              <a href="odour.ir/weblog" class="hover:text-white transition-colors">وبلاگ</a>
            </li>
            <!-- <li>
              <a href="#" class="hover:text-white transition-colors">هوش مصنوعی</a>
            </li> -->
          </ul>
        </div>
        <div>
          <h4 class="font-bold mb-4">لینک‌های مفید</h4>
          <ul class="space-y-2 text-sm text-gray-400">
            <li>
              <a href="#" class="hover:text-white transition-colors">پرفروش ترین ها</a>
            </li>
            <li>
              <a href="#" class="hover:text-white transition-colors">تخفیف ویژه</a>
            </li>
            <li>
              <a href="#" class="hover:text-white transition-colors">وبلاگ</a>
            </li>
              <!-- <li>
                <a href="#" class="hover:text-white transition-colors">شرایط استفاده</a>
              </li> -->
          </ul>
        </div>
        <div>
          <h4 class="font-bold mb-4">شبکه‌های اجتماعی</h4>
        <div class="flex space-x-reverse space-x-4">
          <!-- لینک شماره تلفن -->
          <a href="tel:+989123456789"
            class="w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path
                d="M6.62 10.79a15.053 15.053 0 006.59 6.59l2.2-2.2a1.003 1.003 0 011.11-.21c1.21.48 2.53.74 3.88.74a1 1 0 011 1V20a1 1 0 01-1 1c-9.39 0-17-7.61-17-17a1 1 0 011-1h3.5a1 1 0 011 1c0 1.35.26 2.67.74 3.88a1.003 1.003 0 01-.21 1.11l-2.2 2.2z" />
            </svg>
          </a>

          <!-- لینک تلگرام -->
          <a href="https://t.me/YourTelegramID"
            class="w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path
                d="M9.04 16.88l-.39 3.67c.56 0 .8-.24 1.09-.53l2.61-2.48 5.41 3.94c.99.55 1.7.26 1.97-.91L23.9 4.99c.35-1.43-.52-2-1.45-1.65L1.86 9.98c-1.39.54-1.38 1.31-.24 1.66l5.76 1.8L19.82 6.3c.56-.35 1.07-.16.65.23L9.04 16.88z"/>
            </svg>
          </a>

          <!-- لینک اینستاگرام -->
          <a href="https://instagram.com/YourInstagramID"
            class="w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path
                d="M12 2.2c3.2 0 3.584.012 4.85.07 1.17.054 1.97.24 2.43.407a4.92 4.92 0 011.78 1.15 4.92 4.92 0 011.15 1.78c.166.46.353 1.26.406 2.43.06 1.266.07 1.65.07 4.85s-.012 3.584-.07 4.85c-.054 1.17-.24 1.97-.407 2.43a4.92 4.92 0 01-1.15 1.78 4.92 4.92 0 01-1.78 1.15c-.46.166-1.26.353-2.43.406-1.266.06-1.65.07-4.85.07s-3.584-.012-4.85-.07c-1.17-.054-1.97-.24-2.43-.407a4.92 4.92 0 01-1.78-1.15 4.92 4.92 0 01-1.15-1.78c-.166-.46-.353-1.26-.406-2.43C2.212 15.584 2.2 15.2 2.2 12s.012-3.584.07-4.85c.054-1.17.24-1.97.407-2.43a4.92 4.92 0 011.15-1.78 4.92 4.92 0 011.78-1.15c.46-.166 1.26-.353 2.43-.406C8.416 2.212 8.8 2.2 12 2.2zm0 1.8c-3.16 0-3.53.012-4.77.068-1.02.047-1.58.21-1.95.35a3.15 3.15 0 00-1.16.75 3.15 3.15 0 00-.75 1.16c-.14.37-.3.93-.35 1.95-.056 1.24-.068 1.61-.068 4.77s.012 3.53.068 4.77c.047 1.02.21 1.58.35 1.95.17.43.41.8.75 1.16.36.36.73.58 1.16.75.37.14.93.3 1.95.35 1.24.056 1.61.068 4.77.068s3.53-.012 4.77-.068c1.02-.047 1.58-.21 1.95-.35a3.15 3.15 0 001.16-.75 3.15 3.15 0 00.75-1.16c.14-.37.3-.93.35-1.95.056-1.24.068-1.61.068-4.77s-.012-3.53-.068-4.77c-.047-1.02-.21-1.58-.35-1.95a3.15 3.15 0 00-.75-1.16 3.15 3.15 0 00-1.16-.75c-.37-.14-.93-.3-1.95-.35-1.24-.056-1.61-.068-4.77-.068zM12 5.838a6.162 6.162 0 016.162 6.162A6.162 6.162 0 0112 18.162 6.162 6.162 0 015.838 12 6.162 6.162 0 0112 5.838zm0 1.8a4.362 4.362 0 100 8.724 4.362 4.362 0 000-8.724zm6.406-1.556a1.44 1.44 0 11-2.88 0 1.44 1.44 0 012.88 0z" />
            </svg>
          </a>
        </div>

        </div>
      </div>
      <div class="border-t border-gray-800 mt-8 pt-8 text-center text-sm text-gray-400">
        <p>اودر. تمامی حقوق محفوظ است.</p>
      </div>
    </div>
  </footer>
</body>

</html>